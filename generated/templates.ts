// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  DataSourceTemplate,
  DataSourceContext
} from "@graphprotocol/graph-ts";

export class WeightedPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("WeightedPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "WeightedPool",
      [address.toHex()],
      context
    );
  }
}

export class WeightedPoolV2 extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("WeightedPoolV2", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "WeightedPoolV2",
      [address.toHex()],
      context
    );
  }
}

export class WeightedPool2Tokens extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("WeightedPool2Tokens", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "WeightedPool2Tokens",
      [address.toHex()],
      context
    );
  }
}

export class StablePool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("StablePool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "StablePool",
      [address.toHex()],
      context
    );
  }
}

export class MetaStablePool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("MetaStablePool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "MetaStablePool",
      [address.toHex()],
      context
    );
  }
}

export class ConvergentCurvePool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("ConvergentCurvePool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "ConvergentCurvePool",
      [address.toHex()],
      context
    );
  }
}

export class LiquidityBootstrappingPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("LiquidityBootstrappingPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "LiquidityBootstrappingPool",
      [address.toHex()],
      context
    );
  }
}

export class InvestmentPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("InvestmentPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "InvestmentPool",
      [address.toHex()],
      context
    );
  }
}

export class StablePhantomPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("StablePhantomPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "StablePhantomPool",
      [address.toHex()],
      context
    );
  }
}

export class StablePhantomPoolV2 extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("StablePhantomPoolV2", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "StablePhantomPoolV2",
      [address.toHex()],
      context
    );
  }
}

export class LinearPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("LinearPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "LinearPool",
      [address.toHex()],
      context
    );
  }
}

export class PrimaryIssuePool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("PrimaryIssuePool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "PrimaryIssuePool",
      [address.toHex()],
      context
    );
  }
}

export class SecondaryIssuePool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("SecondaryIssuePool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "SecondaryIssuePool",
      [address.toHex()],
      context
    );
  }
}

export class OffchainSecondariesPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("OffchainSecondariesPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "OffchainSecondariesPool",
      [address.toHex()],
      context
    );
  }
}

export class MarginTradingPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("MarginTradingPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "MarginTradingPool",
      [address.toHex()],
      context
    );
  }
}

export class Gyro2Pool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Gyro2Pool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "Gyro2Pool",
      [address.toHex()],
      context
    );
  }
}

export class Gyro3Pool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Gyro3Pool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "Gyro3Pool",
      [address.toHex()],
      context
    );
  }
}

export class GyroEPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("GyroEPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "GyroEPool",
      [address.toHex()],
      context
    );
  }
}

export class FXPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("FXPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext("FXPool", [address.toHex()], context);
  }
}

export class OffchainAggregator extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("OffchainAggregator", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "OffchainAggregator",
      [address.toHex()],
      context
    );
  }
}
